<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.simple.dao.CategoryDao">

    <!-- 获取类别信息 -->
    <select id="getCategoryById" parameterType="string" resultType="CategoryDO">
        select * from sim_category where id_category = #{idCategory}
    </select>
    
    <!-- 获取类别信息 -->
    <select id="listCategoriesByIdParent" parameterType="string" resultType="CategoryDO">
        select * from sim_category where category_name = #{categoryName}
    </select>
    
    <!-- 类别列表查询 -->
    <select id="listAllCategories" parameterType="string" resultType="CategoryDO">
        select * from sim_category
    </select>
    
    <!-- 一般类别树查询 -->
    <select id="getCategoryTree" resultType="TreeNode">
        select c.id_category 	"id",
		       c.id_parent 		"pId",
		       c.category_name 	"name",
		       c.category_desc 	"desc",
		       true	as		"open"
		  from sim_category c
    </select>
    
    <!-- 一般类别树查询 -->
    <select id="getHasCheckedCategoryTreeByIdComment" parameterType="string" resultType="TreeNode">
        select c.id_category 	"id",
		       c.id_parent 		"pId",
		       c.category_name 	"name",
		       c.category_desc 	"desc",
		       true	as		"open",
		       case
		         when c.id_category in (select cc.id_category
		                                from sim_category_comment cc
		                               where cc.id_comment = #{idComment}) then
		          true
		         else
		          false
		       end "checked"
		  from sim_category c
    </select>
    
    <!-- 保存类别信息 -->
    <insert id="saveCategory" parameterType="CategoryDO">
    	<selectKey keyProperty="idCategory" resultType="string" order="BEFORE">
           select replace(uuid(),'-','')
		</selectKey>
        insert into sim_category
          (id_category,
           id_parent,
           category_name,
           category_code,
           category_desc,
           created_by,
           created_date,
           updated_by,
           updated_date)
        values
          (#{idCategory},
           #{idParent},
           #{categoryName},
           #{categoryCode},
           #{categoryDesc},
           #{createdBy},
           sysdate(),
           #{updatedBy},
           sysdate())
    </insert>
    
    <!-- 更新类别信息 -->
    <update id="updateCategory" parameterType="CategoryDO">
        update sim_category
           set category_name    = #{categoryName},
               category_code    = #{categoryCode},
               category_desc    = #{categoryDesc},
               updated_by   = #{updatedBy},
               updated_date = sysdate()
         where id_category = #{idCategory}
    </update>
    
    <!-- 删除类别信息 -->
    <delete id="deleteCategory" parameterType="string">
        delete from sim_category where id_category = #{idCategory}
    </delete>
    
    <!-- 批量删除类别信息 -->
    <delete id="batchDeleteCategories" parameterType="list">
        delete from sim_category where id_category in 
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
            #{item}  
        </foreach> 
    </delete>
    
</mapper>